{"version":3,"sources":["webpack:///./src/views/AppAuto/appPage.vue?cd93","webpack:///./src/views/AppAuto/appPage.vue","webpack:///./src/views/AppAuto/appPage.vue?d136"],"names":["elementFilter","showElement","pageTotal","currentPage","pageListNoReactive","pageChange","current","pageList","value","undefined","slice","tabRowStyle","commonUtils","filterPageName","expandRowKeys","pageListInit","param","type","request","get","params","then","res","data","length","savePageList","row","show","post","toast","delPageMethod","delete","id","delPage","confirm","confirmButtonText","cancelButtonText","message","removeEmptyPage","catch","rowIndex","pages","parentId","filter","item","i","splice","parentIndex","children","forEach","copyPage","copyPageVal","name","push","fatherIndex","index","childrenVal","addModule","addPage","toString","pageListRowClick","current_pageId","payload","pageId","size","elementPageSize","elementListInit","newVar","oldVal","filterPage","includes","elementList","console","log","records","elementsTotal","total","locationWay","conditionsWay","elementType","locationWayInit","ElementPageChange","addElement","emptyElement","elementName","locationValue","remark","conditions","updateAllElement","updateElement","element","copyElement","delElement","elementId","messageBox","__exports__"],"mappings":"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","file":"static/js/chunk-1d83d025.9c2d9caa.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./appPage.vue?vue&type=style&index=0&id=bd5666b6&scoped=true&lang=css\"","<template>\r\n    <div class=\"app-page\">\r\n        <div class=\"my-page\">\r\n            <div class=\"page-top\">\r\n                <el-button  size=\"small\" @click=\"addModule\" plain>添加模块</el-button>\r\n            </div>\r\n            <div class=\"page-List\">\r\n                <div ><el-input v-model=\"filterPageName\" placeholder=\"请输入页面名称\" :prefix-icon=\"Search\"/></div>\r\n                <div style=\"padding-top: 10px\">\r\n                    <el-table\r\n                            :data=\"pageList\"\r\n                            highlight-current-row\r\n                            stripe\r\n                            :show-header=\"false\"\r\n                            row-key=\"id\"\r\n                            :expand-row-keys=\"expandRowKeys\"\r\n                            :cell-style=\"tabRowStyle\"\r\n                            @row-click=\"pageListRowClick\"\r\n                            type=\"expand\"\r\n                    >\r\n                        <el-table-column label=\"name\" >\r\n                            <template #default=\"scope\">\r\n                                <el-input style=\"margin-bottom: 20px\" size=\"small\" v-show=\"scope.row.show\" placeholder=\"Please input\" v-model=\"scope.row.name\"/>\r\n                                <span style=\"width: 400px\"   v-show=\"!scope.row.show\">{{scope.row.name}}</span>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column label=\"Edit\" width=\"\">\r\n                            <template #default=\"scope\">\r\n                                <div style=\"text-align: right\">\r\n                                    <CopyDocument v-show=\"!scope.row.show\" style=\"width: 1em; height: 1em; margin-right: 8px\" @click=\"copyPage(scope.row)\" />\r\n                                    <Edit  v-show=\"!scope.row.show\" style=\"width: 1em; height: 1em; margin-right: 8px\" @click=\"scope.row.show = true\"/>\r\n                                    <Delete v-show=\"!scope.row.show\" style=\"width: 1em; height: 1em; margin-right: 8px\"  @click=\"delPage(scope.row)\"/>\r\n                                    <Plus v-show=\"!scope.row.show\" style=\"width: 1em; height: 1em; margin-right: 8px\"  @click=\"addPage(scope.row)\"/>\r\n                                    <el-button v-show=\"scope.row.show\" @click=\"savePageList(scope.row)\" type=\"primary\" size=\"small\">save</el-button>\r\n                                    <el-button v-show=\"scope.row.show\" @click=\"removeEmptyPage(scope.row)\" type=\"warning\" size=\"small\">close</el-button>\r\n                                </div>\r\n                            </template>\r\n                        </el-table-column>\r\n                    </el-table>\r\n                </div>\r\n            </div>\r\n            <div class=\"page-bottom\">\r\n                <pagination :total=\"pageTotal\" @paging=\"pageChange\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"my-element\" v-show=\"showElement\">\r\n            <div class=\"element-function\" style=\"display: flex;\" >\r\n                <div>\r\n                    <el-input v-model=\"elementFilter\" placeholder=\"Please input\">\r\n                        <template #append>\r\n                            <el-button>查询</el-button>\r\n                        </template>\r\n                    </el-input>\r\n                </div>\r\n                <div class=\"element-top\">\r\n                    <el-button>重置</el-button>\r\n                </div>\r\n                <div class=\"element-top\">\r\n                    <el-button type=\"primary\" @click=\"updateAllElement\">保存</el-button>\r\n                </div>\r\n                <div class=\"element-top\">\r\n                    <el-button type=\"success\" @click=\"addElement\">新增元素</el-button>\r\n                </div>\r\n            </div>\r\n            <div class=\"element-list\">\r\n                <el-table\r\n                        :data=\"elementList\"\r\n                        stripe\r\n                        row-key=\"id\"\r\n                        :cell-style=\"tabRowStyle\"\r\n                        :header-row-style=\"tabRowStyle\"\r\n                >\r\n                    <el-table-column label=\"elementName\" prop=\"elementName\" >\r\n                        <template #default=\"scope\">\r\n                            <el-input v-model=\"scope.row.elementName\"></el-input>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"elementType\" prop=\"elementType\" >\r\n                        <template #default=\"scope\">\r\n                            <el-select v-model=\"scope.row.elementType\" filterable>\r\n                                <el-option\r\n                                        v-for=\"item in elementType\"\r\n                                        :key=\"item.value\"\r\n                                        :label=\"item.value\"\r\n                                        :value=\"item.value\"\r\n                                />\r\n                            </el-select>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"locationWay\" prop=\"locationWay\"  >\r\n                        <template #default=\"scope\">\r\n                            <el-select v-model=\"scope.row.locationWay\" filterable>\r\n                                <el-option\r\n                                        v-for=\"item in locationWay\"\r\n                                        :key=\"item.value\"\r\n                                        :label=\"item.value\"\r\n                                        :value=\"item.value\"\r\n                                />\r\n                            </el-select>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"显示等待方式\" prop=\"conditions\"  >\r\n                        <template #default=\"scope\">\r\n                            <el-select v-model=\"scope.row.conditions\" filterable>\r\n                                <el-option\r\n                                        v-for=\"item in conditionsWay\"\r\n                                        :key=\"item.name\"\r\n                                        :label=\"item.value\"\r\n                                        :value=\"item.name\"\r\n                                />\r\n                            </el-select>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"locationValue\" prop=\"locationValue\" >\r\n                        <template #default=\"scope\">\r\n                            <el-input style=\"width: 200px\" type=\"textarea\" :rows=\"1\" v-model=\"scope.row.locationValue\"/>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"remark\" prop=\"remark\" >\r\n                        <template #default=\"scope\">\r\n                            <el-tooltip effect=\"light\" placement=\"top\">\r\n                                <template #content> {{scope.row.remark }}</template>\r\n                                <el-input type=\"textarea\" :rows=\"1\" clearable v-model=\"scope.row.remark\"/>\r\n                            </el-tooltip>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"Edit\">\r\n                        <template #default=\"scope\">\r\n                            <div>\r\n                                <el-button-group>\r\n                                    <el-button size=\"mini\" type=\"text\" @click=\"updateElement(scope.row)\">保存&#12288;</el-button>\r\n                                    <el-button size=\"mini\"  type=\"text\" @click=\"copyElement(scope.row)\">复制&#12288;  </el-button>\r\n                                    <el-button size=\"mini\" type=\"text\"  @click=\"delElement(scope.row.id)\">删除</el-button>\r\n                                </el-button-group>\r\n                            </div>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n            </div>\r\n            <div class=\"element-bottom\">\r\n                <pagination :total=\"elementsTotal\" @paging=\"ElementPageChange\" :pageSize=\"elementPageSize\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import pagination from \"../../components/common/pagination\";\r\n    import { CopyDocument,Edit,Delete,Plus } from \"@element-plus/icons\";\r\n    import commonUtils from \"../../utils/commonUtils\";\r\n    import {onBeforeMount, onMounted, ref, watch, watchEffect} from \"vue\";\r\n    import {ElMessage, ElMessageBox} from 'element-plus';\r\n    import request from \"../../utils/request\";\r\n\r\n    let elementFilter = ref(\"\")\r\n    let showElement = ref(false)\r\n    let pageTotal = ref(0)\r\n    let currentPage = ref(1)\r\n    let pageListNoReactive = []\r\n    const pageChange= (current)=>{\r\n        const pageListValue = pageList.value\r\n        if (current === undefined){\r\n            current = 1\r\n        }\r\n        currentPage.value = current\r\n        pageList.value = pageListNoReactive.slice((currentPage.value-1)*10,currentPage.value*10)\r\n    }\r\n    const tabRowStyle = commonUtils.tabRowStyle(\"left\")\r\n    let filterPageName = ref('')\r\n    // 页面列表\r\n    let pageList = ref([])\r\n\r\n    // 自动展开的行数据\r\n    let expandRowKeys = ref([])\r\n    // 获取列表详情\r\n    const pageListInit =()=>{\r\n        const param = {type:2}\r\n        request.get(\"/api/webPage/pageList\",{params:param}).then(res=>{\r\n            pageList.value = res.data\r\n            pageListNoReactive = res.data\r\n            pageTotal.value = res.data.length\r\n        })\r\n    }\r\n    // 保存 pageList\r\n    const savePageList = (row)=>{\r\n        row.show = false\r\n        request.post(\"/api/webPage/update\",row).then(res=>{\r\n            pageListInit()\r\n            commonUtils.toast(res)\r\n        })\r\n\r\n    }\r\n    //删除page\r\n    const delPageMethod = async (row)=>{\r\n        await request.delete(\"/api/webPage/delete/\" + row.id).then(res=>{\r\n            pageListInit()\r\n        })\r\n    }\r\n    const  delPage = async (row)=>{\r\n        ElMessageBox.confirm(\r\n            '确定要进行删除吗?',\r\n            \"提示\",\r\n            {\r\n                confirmButtonText: '确认',\r\n                cancelButtonText: '取消',\r\n                type: 'warning',\r\n            }\r\n        ).then(() => {\r\n            ElMessage({\r\n                type: 'success',\r\n                message: 'Delete completed',\r\n            })\r\n            delPageMethod(row)\r\n            if (row.id===\"\"){\r\n                removeEmptyPage(row)\r\n            }\r\n        }).catch(() => {\r\n            ElMessage({\r\n                type: 'info',\r\n                message: 'Delete canceled',\r\n            })\r\n        })\r\n\r\n    }\r\n    const removeEmptyPage = (row)=>{\r\n        row.show = false\r\n        let rowIndex = 0\r\n        let pages = pageList.value\r\n        if (row.parentId === 0){\r\n            pages.filter((item,i)=>{\r\n                if (item.id === row.id){\r\n                    rowIndex = i\r\n                }\r\n            })\r\n            pages.splice(rowIndex,1)\r\n        }else {\r\n            let parentIndex =0\r\n            pages.filter((item,i)=>{\r\n                if (item.id === row.parentId){\r\n                    parentIndex = i\r\n                }\r\n            })\r\n            pages[parentIndex].children.forEach((item,i)=>{\r\n                if (item.id === \"\"){\r\n                    pages[parentIndex].children.splice(i,1)\r\n                }\r\n            })\r\n        }\r\n    }\r\n    //复制Page\r\n    const copyPage = (row)=>{\r\n        let children = row.children\r\n        children.forEach((item)=>{\r\n            item.id = \"\"\r\n            item.parentId = \"\"\r\n        })\r\n        let copyPageVal = {\r\n            id:\"\",\r\n            name: row.name,\r\n            show: true,\r\n            parentId: 0,\r\n            children: children\r\n        }\r\n        if (row.parentId === 0){\r\n            pageList.value.push(copyPageVal)\r\n        }else {\r\n            let pages = pageList.value\r\n            let fatherIndex = 0;\r\n            pages.filter((item,index)=> {\r\n                if (item[\"id\"] === row.parentId){\r\n                    fatherIndex = index\r\n                }\r\n            })\r\n            let childrenVal = {\r\n                id: \"\",\r\n                name: row.name,\r\n                show: true,\r\n                parentId: pages[fatherIndex][\"id\"],\r\n                children: []\r\n            }\r\n            pages[fatherIndex][\"children\"].push(childrenVal)\r\n        }\r\n    }\r\n    // 添加模块\r\n    const addModule = ()=>{\r\n        pageList.value.push({\r\n            id:\"\",\r\n            name: '',\r\n            type:2,\r\n            show: true,\r\n            parentId:0,\r\n            children: [],\r\n        })\r\n    }\r\n    // 添加页面\r\n    const addPage = (row)=>{\r\n        expandRowKeys.value[0] = row.id.toString()\r\n        let childrenVal = {\r\n            id: \"\",\r\n            type:2,\r\n            name: \"\",\r\n            show: true,\r\n            parentId: row[\"id\"],\r\n            children: []\r\n        }\r\n        row.children.push(childrenVal)\r\n    }\r\n\r\n    // 点击table中任意一行(点击模块中页面)\r\n    const  pageListRowClick = (row)=>{\r\n        if (row.parentId !==0){\r\n            showElement.value = true\r\n            current_pageId.value = row.id\r\n            const payload = {\r\n                pageId:current_pageId.value,\r\n                current:1,\r\n                size: elementPageSize\r\n            }\r\n            elementListInit(payload)\r\n        }\r\n    }\r\n    watch(\r\n        () => filterPageName.value, (newVar, oldVal) => {\r\n\r\n            // commonUtils(pageList.value,newPageList)\r\n            let filterPage = []\r\n            let pages = pageListNoReactive.filter((item)=> {\r\n                if (item.name.includes(newVar)) {\r\n                    filterPage.push(item)\r\n                }else {\r\n                    item.children.forEach((item)=>{\r\n                        if (item.name.includes(newVar)){\r\n                            filterPage.push(item)\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            if (newVar !==''){\r\n                pageList.value = filterPage\r\n            }else {\r\n                pageList.value = pageListNoReactive\r\n            }\r\n        }\r\n    )\r\n\r\n    watchEffect(()=>{\r\n        pageChange(currentPage.value)\r\n    })\r\n\r\n    onMounted(()=>{\r\n    })\r\n\r\n    //-----------------------------------element---------------------------------\r\n    // elementList(页面元素列表）\r\n    let elementList = ref([])\r\n    //初始化elementList\r\n    const elementListInit = (payload)=>{\r\n        if (payload === undefined){\r\n            payload = {\r\n                pageId:current_pageId.value,\r\n                current:1,\r\n                size: elementPageSize\r\n            }\r\n        }\r\n        if (current_pageId.value!==\"\"){\r\n            request.post(\"/api/element/list\",payload).then(res=>{\r\n                console.log(res.data)\r\n                elementList.value = res.data.records\r\n                elementsTotal.value = res.data.total\r\n            })\r\n        }\r\n\r\n    }\r\n    // 分页总数\r\n    let elementsTotal = ref(0)\r\n    // 每一页数量\r\n    const elementPageSize = 15\r\n\r\n    // locationWay定位方式下拉框\r\n    const locationWay = ref([])\r\n    // 显示等待方式\r\n    const conditionsWay = ref([])\r\n\r\n    // elementType元素类型下拉框\r\n    const elementType = ref([])\r\n    const locationWayInit = ()=>{\r\n        request.post(\"/api/config/locationWay\").then(res=>{\r\n            locationWay.value = res.data\r\n        })\r\n        request.post(\"/api/config/elementType\").then(res=>{\r\n            elementType.value = res.data\r\n        })\r\n        request.post(\"/api/webPage/conditionsWay\").then(res=>{\r\n            conditionsWay.value  =res.data\r\n        })\r\n    }\r\n\r\n    // 当前的PageId\r\n    const current_pageId = ref(null)\r\n\r\n    // element- -pagination 页面改变\r\n    const ElementPageChange = (current)=>{\r\n        const payload = {\r\n            pageId:current_pageId.value,\r\n            current:current,\r\n            size: elementPageSize\r\n        }\r\n        elementListInit(payload)\r\n    }\r\n\r\n    //新增addElement\r\n    const addElement = ()=>{\r\n        // 空的elementList\r\n        const emptyElement= {\r\n            id:null,\r\n            elementName: \"\",\r\n            locationWay: \"\",\r\n            locationValue: \"\",\r\n            remark: \"\",\r\n            pageId: current_pageId.value,\r\n            conditions:\"\",\r\n            type:2\r\n        }\r\n        elementList.value.push(emptyElement)\r\n    }\r\n\r\n    //保存更新所有element元素\r\n    const updateAllElement = ()=>{\r\n        request.post(\"/api/element/updateAll\",elementList.value).then(res=>{\r\n            commonUtils.toast(res)\r\n            elementListInit()\r\n        })\r\n    }\r\n\r\n    //保存更新单个element元素\r\n    const updateElement = (element)=>{\r\n        request.post(\"/api/element/update\",element).then(res=>{\r\n            commonUtils.toast(res)\r\n            elementListInit()\r\n        })\r\n    }\r\n    //复制element元素\r\n    const copyElement = (element)=>{\r\n        const copyElement= {\r\n            id:null,\r\n            type:element.type,\r\n            elementName: element.elementName,\r\n            locationWay: element.locationWay,\r\n            locationValue: element.locationValue,\r\n            remark: element.remark,\r\n            pageId: current_pageId.value,\r\n            conditions:element.conditions\r\n        }\r\n        elementList.value.push(copyElement)\r\n    }\r\n    //删除element元素\r\n    const delElement = (elementId)=>{\r\n        if (elementId == null){\r\n            commonUtils.messageBox(()=>{elementList.value =  elementList.value.filter((item, i) => item.id !== null);},\"未保存确定要删除吗？\")\r\n        }else {\r\n            commonUtils.messageBox(()=>{request.delete(\"/api/element/delEle/\"+elementId).then(res=>{\r\n                elementListInit()\r\n            })})\r\n        }\r\n    }\r\n\r\n    // ----------------生命周期函数-----------\r\n    onBeforeMount(()=>{\r\n        pageListInit()\r\n        locationWayInit()\r\n    })\r\n\r\n</script>\r\n\r\n<style scoped>\r\n    .app-page{\r\n        height: 100%;\r\n        width: 100%;\r\n        display: flex;\r\n    }\r\n    .my-page{\r\n        height: 100%;\r\n        width: 30%;\r\n        padding: 10px 10px 10px 10px;\r\n    }\r\n    .my-element{\r\n        height: 100%;\r\n        width: 70%;\r\n        padding: 10px 10px 10px 10px;\r\n    }\r\n\r\n    .element-top{\r\n        padding-left: 20px;\r\n    }\r\n    .page-List{\r\n        padding-top: 10px;\r\n        border: 1px solid #ebeef5;\r\n        overflow: auto;\r\n    }\r\n    .element-list{\r\n        padding-top: 20px;\r\n        border: 1px solid #ebeef5;\r\n        overflow:auto;\r\n    }\r\n    .page-bottom{\r\n        padding-top: 50px;\r\n    }\r\n    .element-bottom{\r\n        padding-top: 50px;\r\n        position: fixed;\r\n        right: 50px;\r\n        bottom: 100px;\r\n    }\r\n    /deep/ .el-table__body tr.current-row>td{\r\n        background-color: #69A8EA !important;\r\n        color: #fff;\r\n    }\r\n\r\n\r\n</style>","import script from \"./appPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./appPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./appPage.vue?vue&type=style&index=0&id=bd5666b6&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\dujun\\\\Desktop\\\\vue\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-bd5666b6\"]])\n\nexport default __exports__"],"sourceRoot":""}
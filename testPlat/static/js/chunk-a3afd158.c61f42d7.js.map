{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.includes.js","webpack:///./node_modules/core-js/internals/not-a-regexp.js","webpack:///./node_modules/sortablejs/modular/sortable.esm.js","webpack:///./node_modules/core-js/internals/correct-is-regexp-logic.js"],"names":["$","uncurryThis","notARegExp","requireObjectCoercible","toString","correctIsRegExpLogic","stringIndexOf","indexOf","target","proto","forced","includes","searchString","this","arguments","length","undefined","global","isRegExp","TypeError","module","exports","it","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","i","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","Symbol","iterator","constructor","prototype","value","configurable","writable","_extends","assign","hasOwnProperty","call","_objectWithoutPropertiesLoose","excluded","sourceKeys","_objectWithoutProperties","sourceSymbolKeys","propertyIsEnumerable","version","userAgent","pattern","window","navigator","match","IE11OrLess","Edge","FireFox","Safari","IOS","ChromeForAndroid","captureMode","capture","passive","on","el","event","fn","addEventListener","off","removeEventListener","matches","selector","substring","msMatchesSelector","webkitMatchesSelector","_","getParentOrHost","host","document","nodeType","parentNode","closest","ctx","includeCTX","_throttleTimeout","R_SPACE","toggleClass","name","state","classList","className","replace","css","prop","val","style","defaultView","getComputedStyle","currentStyle","matrix","selfOnly","appliedTransforms","transform","matrixFn","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","find","tagName","list","getElementsByTagName","n","getWindowScrollingElement","scrollingElement","documentElement","getRect","relativeToContainingBlock","relativeToNonStaticParent","undoScale","container","getBoundingClientRect","elRect","top","left","bottom","right","height","width","innerHeight","innerWidth","containerRect","parseInt","elMatrix","scaleX","a","scaleY","d","isScrolledPast","elSide","parentSide","parent","getParentAutoScrollElement","elSideVal","parentSideVal","visible","getChild","childNum","options","includeDragEl","currentChild","children","display","Sortable","ghost","dragged","draggable","lastChild","last","lastElementChild","previousElementSibling","index","nodeName","toUpperCase","clone","getRelativeScrollOffset","offsetLeft","offsetTop","winScroller","scrollLeft","scrollTop","indexOfObject","arr","Number","includeSelf","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","extend","dst","src","isRectEqual","rect1","rect2","Math","round","throttle","callback","ms","args","_this","setTimeout","cancelThrottle","clearTimeout","scrollBy","x","y","Polymer","jQuery","Zepto","dom","cloneNode","expando","Date","getTime","AnimationStateManager","animationCallbackId","animationStates","captureAnimationState","animation","slice","child","rect","fromRect","thisAnimationDuration","childMatrix","f","e","addAnimationState","removeAnimationState","splice","animateAll","animating","animationTime","time","toRect","prevFromRect","prevToRect","animatingRect","targetMatrix","calculateRealTime","animate","max","animationResetTimer","currentRect","duration","translateX","translateY","animatingX","animatingY","forRepaintDummy","repaint","easing","animated","offsetWidth","sqrt","pow","plugins","defaults","initializeByDefault","PluginManager","mount","plugin","option","p","pluginName","concat","pluginEvent","eventName","sortable","evt","eventCanceled","cancel","eventNameGlobal","initializePlugins","initialized","modified","modifyOption","getEventProperties","eventProperties","modifiedValue","optionListeners","dispatchEvent","_ref","rootEl","targetEl","cloneEl","toEl","fromEl","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","originalEvent","putSortable","extraEventProperties","onName","charAt","substr","CustomEvent","createEvent","initEvent","bubbles","cancelable","to","from","item","pullMode","lastPutMode","allEventProperties","_excluded","data","bind","dragEl","parentEl","ghostEl","nextEl","lastDownEl","cloneHidden","dragStarted","moved","activeSortable","active","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","_dispatchEvent","info","activeGroup","tapEvt","touchEvt","lastDx","lastDy","tapDistanceLeft","tapDistanceTop","lastTarget","lastDirection","targetMoveDistance","ghostRelativeParent","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","_silent","savedInputChecked","documentExists","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","createElement","supportCssPointerEvents","cssText","pointerEvents","_detectDirection","elCSS","elWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","child1","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","secondChildWidth","flexDirection","gridTemplateColumns","split","touchingSideChild2","clear","_dragElInRowColumn","dragRect","targetRect","vertical","dragElS1Opp","dragElS2Opp","dragElOppLength","targetS1Opp","targetS2Opp","targetOppLength","_detectNearestEmptySortable","ret","some","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","_prepareGroup","toFn","pull","sameGroup","group","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","preventDefault","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","touches","nearest","clientX","clientY","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","get","_globalDragOver","dropEffect","_onMove","willInsertAfter","retVal","onMoveFn","onMove","draggedRect","related","relatedRect","_disableDraggable","_unsilent","_ghostIsFirst","spacer","_ghostIsLast","_getSwapDirection","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","_getInsertDirection","_generateId","str","href","sum","charCodeAt","_saveInputCheckedState","root","inputs","idx","checked","_nextTick","_cancelNextTick","id","contains","_getDirection","type","touch","pointerType","originalTarget","shadowRoot","path","composedPath","button","isContentEditable","criteria","trim","_prepareDragStart","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","abs","floor","_onTouchMove","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","fallback","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","inserted","ghostMatrix","relativeScrollOffset","dx","dy","b","c","cssMatrix","appendChild","_hideClone","cloneId","insertBefore","_loopId","setInterval","effectAllowed","_dragStartId","revert","isOwner","canSort","fromSortable","completedFired","dragOverEvent","_ignoreWhileAnimating","completed","elLastChild","changed","firstChild","targetBeforeFirstSwap","sibling","differentLevel","differentRowCol","side1","scrolledPastTop","scrollBefore","dragIndex","nextElementSibling","after","moveVector","extra","axis","insertion","_showClone","_offMoveEvents","_offUpEvents","clearInterval","removeChild","save","handleEvent","toArray","order","getAttribute","useAnimation","items","set","destroy","Array","querySelectorAll","removeAttribute","utils","is","nextTick","cancelNextTick","detectDirection","element","_len","_key","create","scrollEl","scrollRootEl","lastAutoScrollX","lastAutoScrollY","touchEvt$1","pointerElemChangedInterval","autoScrolls","scrolling","AutoScrollPlugin","AutoScroll","scroll","forceAutoScrollFallback","scrollSensitivity","scrollSpeed","bubbleScroll","_handleAutoScroll","_handleFallbackAutoScroll","dragOverCompleted","_ref2","dragOverBubble","drop","clearPointerElemChangedInterval","clearAutoScrolls","nulling","autoScroll","ogElemScroller","newElem","pid","isFallback","scrollCustomFn","sens","speed","scrollThisInstance","scrollFn","layersOut","currentParent","canScrollX","canScrollY","scrollPosX","scrollPosY","vx","vy","layer","scrollOffsetY","scrollOffsetX","toSortable","changedTouches","onSpill","Revert","Remove","startIndex","dragStart","_ref3","_ref4","parentSortable","wellKnownSymbol","MATCH","METHOD_NAME","regexp","error1","error2"],"mappings":"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","file":"static/js/chunk-a3afd158.c61f42d7.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\nvar stringIndexOf = uncurryThis(''.indexOf);\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~stringIndexOf(\n      toString(requireObjectCoercible(this)),\n      toString(notARegExp(searchString)),\n      arguments.length > 1 ? arguments[1] : undefined\n    );\n  }\n});\n","var global = require('../internals/global');\nvar isRegExp = require('../internals/is-regexp');\n\nvar TypeError = global.TypeError;\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","/**!\n * Sortable 1.14.0\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar version = \"1.14.0\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !! /*@__PURE__*/navigator.userAgent.match(pattern);\n  }\n}\n\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(\n/**HTMLElement*/\nel,\n/**String*/\nselector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\n\nfunction closest(\n/**HTMLElement*/\nel,\n/**String*/\nselector,\n/**HTMLElement*/\nctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n\n  return null;\n}\n\nvar R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  var style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n        i = 0,\n        n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n/**\n * Returns the \"bounding client rect\" of given element\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\n * @param  {[HTMLElement]} container              The parent the element will be placed in\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\n */\n\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n\n      } while (container = container.parentNode);\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n        scaleX = elMatrix && elMatrix.a,\n        scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n/**\n * Checks if a side of an element is scrolled past a side of its parents\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\n */\n\n\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n      elSideVal = getRect(el)[elSide];\n  /* jshint boss:true */\n\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n        visible = void 0;\n\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n/**\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n * and non-draggable elements\n * @param  {HTMLElement} el       The parent element\n * @param  {Number} childNum      The index of the child\n * @param  {Object} options       Parent Sortable's options\n * @return {HTMLElement}          The child at index childNum, or null if not found\n */\n\n\nfunction getChild(el, childNum, options, includeDragEl) {\n  var currentChild = 0,\n      i = 0,\n      children = el.children;\n\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n\n      currentChild++;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n * @param  {HTMLElement} el       Parent element\n * @param  {selector} selector    Any other elements that should be ignored\n * @return {HTMLElement}          The last child, ignoring ghostEl\n */\n\n\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n/**\n * Returns the index of an element within its parent for a selected set of\n * elements\n * @param  {HTMLElement} el\n * @param  {selector} selector\n * @return {number}\n */\n\n\nfunction index(el, selector) {\n  var index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n  /* jshint boss:true */\n\n\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n\n  return index;\n}\n/**\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n * The value is returned in real pixels.\n * @param  {HTMLElement} el\n * @return {Array}             Offsets in the format of [left, top]\n */\n\n\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n      offsetTop = 0,\n      winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n          scaleX = elMatrix.a,\n          scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n/**\n * Returns the index of the object within the given array\n * @param  {Array} arr   Array that may or may not hold the object\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\n * @return {Number}      The index of the object in the array, or -1\n */\n\n\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n\n  } while (elem = elem.parentNode);\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\n\nvar _throttleTimeout;\n\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n          _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\n\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n      animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n\n        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\n\n\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n\n      var animating = false,\n          animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n            target = state.target,\n            fromRect = target.fromRect,\n            toRect = getRect(target),\n            prevFromRect = target.prevFromRect,\n            prevToRect = target.prevToRect,\n            animatingRect = state.rect,\n            targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        } // if fromRect != toRect: animate\n\n\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = _this.options.animation;\n          }\n\n          _this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d,\n            translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n            translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n\n    plugins.forEach(function (p) {\n      if (p.pluginName === plugin.pluginName) {\n        throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\n      }\n    });\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n\n    this.eventCanceled = false;\n\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\n\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      } // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n\n\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized; // Add default options from plugin\n\n      _extends(defaults, initialized.defaults);\n    });\n\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n      rootEl = _ref.rootEl,\n      name = _ref.name,\n      targetEl = _ref.targetEl,\n      cloneEl = _ref.cloneEl,\n      toEl = _ref.toEl,\n      fromEl = _ref.fromEl,\n      oldIndex = _ref.oldIndex,\n      newIndex = _ref.newIndex,\n      oldDraggableIndex = _ref.oldDraggableIndex,\n      newDraggableIndex = _ref.newDraggableIndex,\n      originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n      options = sortable.options,\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\n\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar _excluded = [\"evt\"];\n\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      originalEvent = _ref.evt,\n      data = _objectWithoutProperties(_ref, _excluded);\n\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread2({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\n\nvar dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    lastDx,\n    lastDy,\n    tapDistanceLeft,\n    tapDistanceTop,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\nghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n_silent = false,\n    savedInputChecked = [];\n/** @const */\n\nvar documentExists = typeof document !== 'undefined',\n    PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\nsupportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n  if (!documentExists) return; // false when <= IE11\n\n  if (IE11OrLess) {\n    return false;\n  }\n\n  var el = document.createElement('x');\n  el.style.cssText = 'pointer-events:auto';\n  return el.style.pointerEvents === 'auto';\n}(),\n    _detectDirection = function _detectDirection(el, options) {\n  var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n\n  if (elCSS.display === 'flex') {\n    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n  }\n\n  if (elCSS.display === 'grid') {\n    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n  }\n\n  if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n    var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n  }\n\n  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n},\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n},\n\n/**\n * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n * @param  {Number} x      X position\n * @param  {Number} y      Y position\n * @return {HTMLElement}   Element of the first found nearest Sortable\n */\n_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n  var ret;\n  sortables.some(function (sortable) {\n    var threshold = sortable[expando].options.emptyInsertThreshold;\n    if (!threshold || lastChild(sortable)) return;\n    var rect = getRect(sortable),\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n    if (insideHorizontally && insideVertically) {\n      return ret = sortable;\n    }\n  });\n  return ret;\n},\n    _prepareGroup = function _prepareGroup(options) {\n  function toFn(value, pull) {\n    return function (to, from, dragEl, evt) {\n      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n\n      if (value == null && (pull || sameGroup)) {\n        // Default pull value\n        // Default pull and put value if same group\n        return true;\n      } else if (value == null || value === false) {\n        return false;\n      } else if (pull && value === 'clone') {\n        return value;\n      } else if (typeof value === 'function') {\n        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n      } else {\n        var otherGroup = (pull ? to : from).options.group.name;\n        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n      }\n    };\n  }\n\n  var group = {};\n  var originalGroup = options.group;\n\n  if (!originalGroup || _typeof(originalGroup) != 'object') {\n    originalGroup = {\n      name: originalGroup\n    };\n  }\n\n  group.name = originalGroup.name;\n  group.checkPull = toFn(originalGroup.pull, true);\n  group.checkPut = toFn(originalGroup.put);\n  group.revertClone = originalGroup.revertClone;\n  options.group = group;\n},\n    _hideGhostForTarget = function _hideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', 'none');\n  }\n},\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', '');\n  }\n}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\n\nif (documentExists) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\n\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\n\n\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n\n  this.el = el; // root element\n\n  this.options = options = _extends({}, options); // Export instance\n\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options); // Bind all private methods\n\n\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  } // Setup drag mode\n\n\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  } // Bind events\n\n\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n\n  sortables.push(this.el); // Restore sorting\n\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n  _extends(this, AnimationStateManager());\n}\n\nSortable.prototype =\n/** @lends Sortable.prototype */\n{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart(\n  /** Event|TouchEvent */\n  evt) {\n    if (!evt.cancelable) return;\n\n    var _this = this,\n        el = this.el,\n        options = this.options,\n        preventOnFilter = options.preventOnFilter,\n        type = evt.type,\n        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n        target = (touch || evt).target,\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n        filter = options.filter;\n\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n\n    if (dragEl) {\n      return;\n    }\n\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    } // cancel dnd if original target is content editable\n\n\n    if (originalTarget.isContentEditable) {\n      return;\n    } // Safari ignores further event handling after mousedown\n\n\n    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    } // Get the index of the dragged element within its parent\n\n\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable); // Check filter\n\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    } // Prepare `dragstart`\n\n\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch,\n  /** HTMLElement */\n  target) {\n    var _this = this,\n        el = _this.el,\n        options = _this.options,\n        ownerDocument = el.ownerDocument,\n        dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n\n          return;\n        } // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n\n\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        } // Bind the events: dragstart/dragend\n\n\n        _this._triggerDragStart(evt, touch); // Drag start event\n\n\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        }); // Chosen item\n\n\n        toggleClass(dragEl, options.chosenClass, true);\n      }; // Disable \"draggable\"\n\n\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent('delayStart', this, {\n        evt: evt\n      }); // Delay is impossible for native DnD in Edge or IE\n\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n\n          return;\n        } // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n\n\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\n  /** TouchEvent|PointerEvent **/\n  e) {\n    var touch = e.touches ? e.touches[0] : e;\n\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n\n    awaitingDragStarted = false;\n\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n\n      var options = this.options; // Apply effect\n\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost(); // Drag start event\n\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        }\n        /* jshint boss:true */\n        while (parent = parent.parentNode);\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove(\n  /**TouchEvent*/\n  evt) {\n    if (tapEvt) {\n      var options = this.options,\n          fallbackTolerance = options.fallbackTolerance,\n          fallbackOffset = options.fallbackOffset,\n          touch = evt.touches ? evt.touches[0] : evt,\n          ghostMatrix = ghostEl && matrix(ghostEl, true),\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\n\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n          options = this.options; // Position absolutely\n\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl); // Set transform-origin\n\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart(\n  /**Event*/\n  evt,\n  /**boolean*/\n  fallback) {\n    var _this = this;\n\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n\n      return;\n    }\n\n    pluginEvent('setupClone', this);\n\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    } // #1143: IFrame support workaround\n\n\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, 'drop', _this); // #1276 fix:\n\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        target = evt.target,\n        dragRect,\n        targetRect,\n        revert,\n        options = this.options,\n        group = options.group,\n        activeSortable = Sortable.active,\n        isOwner = activeGroup === group,\n        canSort = options.sort,\n        fromSortable = putSortable || activeSortable,\n        vertical,\n        _this = this,\n        completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread2({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    } // Capture animation state\n\n\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n\n      _this.captureAnimationState();\n\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    } // Return invocation when dragEl is inserted (or completed)\n\n\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        } // Animation\n\n\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      } // Null lastTarget if it is not inside a previously swapped element\n\n\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      } // no bubbling and not fallback\n\n\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    } // Call when dragEl has been inserted\n\n\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n\n        capture();\n\n        this._hideClone();\n\n        dragOverEvent('revert');\n\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      var elLastChild = lastChild(el, options.draggable);\n\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // Insert to end of list\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        } // if there is a last element, it is the target\n\n\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          targetRect = getRect(target);\n        }\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\n        // Insert to start of list\n        var firstChild = getChild(el, 0, options, true);\n\n        if (firstChild === dragEl) {\n          return completed(false);\n        }\n\n        target = firstChild;\n        targetRect = getRect(target);\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\n          capture();\n          el.insertBefore(dragEl, firstChild);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n            targetBeforeFirstSwap,\n            differentLevel = dragEl.parentNode !== el,\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n            side1 = vertical ? 'top' : 'left',\n            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        } // If dragEl is already beside target: Do not insert\n\n\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n            after = false;\n        after = direction === 1;\n\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n          // must be done before animation\n\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n\n          changed();\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        options = this.options; // Get the index of the dragged element within its parent\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    if (Sortable.eventCanceled) {\n      this._nulling();\n\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n\n    _cancelNextTick(this._dragStartId); // Unbind events\n\n\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n\n    this._offMoveEvents();\n\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n\n    css(dragEl, 'transform', '');\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n\n        _disableDraggable(dragEl);\n\n        dragEl.style['will-change'] = ''; // Remove classes\n        // ghostClass is added in dragStarted\n\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            }); // Remove event\n\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            }); // drag from one list and drop into another\n\n\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          }); // Save sorting\n\n\n          this.save();\n        }\n      }\n    }\n\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent(\n  /**Event*/\n  evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n\n        break;\n\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n\n          _globalDragOver(evt);\n        }\n\n        break;\n\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function toArray() {\n    var order = [],\n        el,\n        children = this.el.children,\n        i = 0,\n        n = children.length,\n        options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function sort(order, useAnimation) {\n    var items = {},\n        rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    useAnimation && this.captureAnimationState();\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n    useAnimation && this.animateAll();\n  },\n\n  /**\n   * Save the current sorting\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function option(name, value) {\n    var options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\n   * Destroy\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    } // Remove draggable attributes\n\n\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\n\nfunction _globalDragOver(\n/**Event*/\nevt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n      sortable = fromEl[expando],\n      onMoveFn = sortable.options.onMove,\n      retVal; // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsFirst(evt, vertical, sortable) {\n  var rect = getRect(getChild(sortable.el, 0, sortable.options, true));\n  var spacer = 10;\n  return vertical ? evt.clientX < rect.left - spacer || evt.clientY < rect.top && evt.clientX < rect.right : evt.clientY < rect.top - spacer || evt.clientY < rect.bottom && evt.clientX < rect.left;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var spacer = 10;\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\n\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n      targetLength = vertical ? targetRect.height : targetRect.width,\n      targetS1 = vertical ? targetRect.top : targetRect.left,\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\n      invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\n\n\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\n\n\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n      i = str.length,\n      sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n} // Fixed #973:\n\n\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n} // Export utils\n\n\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\n\nSortable.get = function (element) {\n  return element[expando];\n};\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\n\n\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n\n    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\n\n\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n}; // Export\n\n\nSortable.version = version;\n\nvar autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      forceAutoScrollFallback: false,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    }; // Bind all private methods\n\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n          y = (evt.touches ? evt.touches[0] : evt).clientY,\n          elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n\n      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n      y = (evt.touches ? evt.touches[0] : evt).clientY,\n      sens = options.scrollSensitivity,\n      speed = options.scrollSpeed,\n      winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n      scrollCustomFn; // New scroll root, set scrollEl\n\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  var layersOut = 0;\n  var currentParent = scrollEl;\n\n  do {\n    var el = currentParent,\n        rect = getRect(el),\n        top = rect.top,\n        bottom = rect.bottom,\n        left = rect.left,\n        right = rect.right,\n        width = rect.width,\n        height = rect.height,\n        canScrollX = void 0,\n        canScrollY = void 0,\n        scrollWidth = el.scrollWidth,\n        scrollHeight = el.scrollHeight,\n        elCSS = css(el),\n        scrollPosX = el.scrollLeft,\n        scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n\n          }\n\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      dragEl = _ref.dragEl,\n      activeSortable = _ref.activeSortable,\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\n      hideGhostForTarget = _ref.hideGhostForTarget,\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n        putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n\n    this.sortable.animateAll();\n\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n        putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n          target = _ref2.target,\n          onMove = _ref2.onMove,\n          activeSortable = _ref2.activeSortable,\n          changed = _ref2.changed,\n          cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n          options = this.options;\n\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n          putSortable = _ref3.putSortable,\n          dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n      p2 = n2.parentNode,\n      i1,\n      i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n    multiDragClones = [],\n    lastMultiDragSelect,\n    // for selection with modifier key down (SHIFT)\nmultiDragSortable,\n    initialFolding = false,\n    // Initial multi-drag fold when drag started\nfolding = false,\n    // Folding any other time\ndragStarted = false,\n    dragEl$1,\n    clonesFromRect,\n    clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (sortable.options.supportPointer) {\n      on(document, 'pointerup', this._deselectMultiDrag);\n    } else {\n      on(document, 'mouseup', this._deselectMultiDrag);\n      on(document, 'touchend', this._deselectMultiDrag);\n    }\n\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n          cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n          rootEl = _ref3.rootEl,\n          dispatchSortableEvent = _ref3.dispatchSortableEvent,\n          cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n          rootEl = _ref4.rootEl,\n          cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n\n      var sortable = _ref5.sortable,\n          cloneNowHidden = _ref5.cloneNowHidden,\n          cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      }); // Sort multi-drag elements\n\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n        sortable.captureAnimationState();\n\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        } // Remove all auxiliary multidrag items from el, if sorting enabled\n\n\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n          completed = _ref8.completed,\n          cancel = _ref8.cancel;\n\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n          rootEl = _ref9.rootEl,\n          sortable = _ref9.sortable,\n          dragRect = _ref9.dragRect;\n\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n          isOwner = _ref10.isOwner,\n          insertion = _ref10.insertion,\n          activeSortable = _ref10.activeSortable,\n          parentEl = _ref10.parentEl,\n          putSortable = _ref10.putSortable;\n      var options = this.options;\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\n\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n\n\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n\n            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\n\n\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n          isOwner = _ref11.isOwner,\n          activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n          rootEl = _ref12.rootEl,\n          parentEl = _ref12.parentEl,\n          sortable = _ref12.sortable,\n          dispatchSortableEvent = _ref12.dispatchSortableEvent,\n          oldIndex = _ref12.oldIndex,\n          putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n          children = parentEl.children; // Multi-drag selection\n\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          }); // Modifier activated, select from last to dragEl\n\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n                currentIndex = index(dragEl$1);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvt: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          });\n        }\n      } // Multi-drag drop\n\n\n      if (dragStarted && this.isMultiDrag) {\n        folding = false; // Do not \"unfold\" after around dragEl if reverted\n\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect; // Prepare unfold animation\n\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n\n\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n\n              multiDragIndex++;\n            }); // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n\n              if (update) {\n                dispatchSortableEvent('update');\n              }\n            }\n          } // Must be done after capturing individual rects (scroll bar)\n\n\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      } // Remove clones if necessary\n\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return; // Only deselect if selection is in this sortable\n\n      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\n\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\n\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvt: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\n       * Selects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be selected\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n\n          multiDragSortable = sortable;\n        }\n\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n\n      /**\n       * Deselects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be deselected\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n            index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n\n      var oldIndicies = [],\n          newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        }); // multiDragElements will already be sorted if folding\n\n        var newIndex;\n\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n\n        return key;\n      }\n    }\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n/**\n * Insert multi-drag clones\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\n * @param  {HTMLElement} rootEl\n */\n\n\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\n\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n"],"sourceRoot":""}